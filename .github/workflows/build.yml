name: build
on:
  push:
    branches:
    - main
    tags:
    - '*'
jobs:
  build:
    name: build release assets
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2

    - name: set the release version (tag)
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    - name: set the release version (main)
      if: github.ref == 'refs/heads/main'
      run: echo "RELEASE_VERSION=canary" >> $GITHUB_ENV

    - uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: install gox
      run: go get github.com/mitchellh/gox

    - name: build release assets
      run: |
        mkdir _dist
        CGO_ENABLED=0 gox -parallel=3 -output="_dist/{{.OS}}-{{.Arch}}/{{.Dir}}" -osarch='darwin/amd64 darwin/arm64 linux/amd64 linux/386 linux/arm linux/arm64 linux/ppc64le windows/amd64' -ldflags "-X github.com/fishworks/gofish/version.Version=${{ env.RELEASE_VERSION }} -X github.com/fishworks/gofish/version.BuildMetadata=git.${GITHUB_SHA}" github.com/fishworks/gofish/cmd/gofish

    - name: create archives
      run: |
        cd _dist
        find * -type d -exec cp ../LICENSE {} \;
        find * -type d -exec cp ../README.md {} \;
        find * -type d -exec tar -zcf gofish-${{ env.RELEASE_VERSION }}-{}.tar.gz {} \;
        find * -type d -exec zip -r gofish-${{ env.RELEASE_VERSION }}-{}.zip {} \;

    - uses: actions/upload-artifact@v2
      with:
        name: gofish
        path: _dist/*.tar.gz

    - uses: actions/upload-artifact@v2
      with:
        name: gofish
        path: _dist/*.zip

  publish:
    name: publish release assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: set the release version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: set the release version
        if: github.ref == 'refs/heads/main'
        run: echo "RELEASE_VERSION=canary" >> $GITHUB_ENV

      - name: download release assets
        uses: actions/download-artifact@v2
        with:
          name: gofish

      - name: generate checksums
        run: |
          sha256sum * > checksums-${{ env.RELEASE_VERSION }}.txt

      - name: upload to azure
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          source_dir: '.'
          container_name: '$web'
          connection_string: ${{ secrets.CONNECTIONSTRING }}
          overwrite: 'true'
          extra_args: "--destination-path releases"
